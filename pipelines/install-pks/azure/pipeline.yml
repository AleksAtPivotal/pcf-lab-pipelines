groups:
- name: pks-deploy
  jobs:
  - bootstrap-terraform-state
  - wipe-env
  - create-infrastructure

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: azure-blobstore
  type: docker-image
  source:
    repository: czero/azure-blobstore-resource


resources:
- name: terraform-state
  type: azure-blobstore
  source:
    storage_account_name: {{terraform_azure_storage_account_name}}
    storage_account_key: {{terraform_azure_storage_access_key}}
    container: {{azure_storage_container_name}}
    versioned_file: terraform.tfstate
- name: pcf-pipelines
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-pipelines.git
    branch: master
    tag_filter: "v0.23.13"
- name: pcf-lab-pipelines
  type: git
  source:
    uri: https://github.com/alekssaul/pcf-lab-pipelines.git
    branch: "install-pks-azure"
    #tag_filter: "dev"
- name: pivnet-opsmgr
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
    product_version: {{opsman_major_minor_version}}
    sort_by: semver
jobs:
####################################
## Job - Boostrap Terraform State ##
####################################
- name: bootstrap-terraform-state
  serial_groups: [terraform]
  plan:
  - get: pcf-pipelines
  - task: create-terraform-state
    params:
      AZURE_STORAGE_ACCOUNT: {{terraform_azure_storage_account_name}}
      AZURE_STORAGE_KEY: {{terraform_azure_storage_access_key}}
      CONTAINER: {{azure_storage_container_name}}
    file: pcf-pipelines/install-pcf/azure/tasks/create-initial-terraform-state/task.yml
#####################
## Job - Wipe Env  ##
#####################
# This is not working fully yet
- name: wipe-env
  serial: true
  max_in_flight: 1
  serial_groups: [full]
  ensure:
    put: terraform-state
    params:
      file: terraform-state-output/terraform.tfstate
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state

  - task: wipe-env
    file: pcf-pipelines/install-pcf/azure/tasks/wipe-env/task.yml
    params:
      ARG_WIPE: "wipe"
      AZURE_PCF_TERRAFORM_TEMPLATE: {{azure_pcf_terraform_template}}
      AZURE_SUBSCRIPTION_ID: {{azure_subscription_id}}
      AZURE_TENANT_ID: {{azure_tenant_id}}
      AZURE_CLIENT_ID: {{azure_client_id}}
      AZURE_CLIENT_SECRET: {{azure_client_secret}}
      AZURE_REGION: {{azure_region}}
      AZURE_TERRAFORM_PREFIX: {{azure_terraform_prefix}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
#################################
## Job - Create Infrastructure ##
#################################
- name: create-infrastructure
  serial: true
  max_in_flight: 1
  serial_groups: [full]
  ensure:
    put: terraform-state
    params:
      file: terraform-state-output/terraform.tfstate
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: pcf-lab-pipelines
    - get: terraform-state
    - get: pivnet-opsmgr
      params:
        globs:
        - "*Azure.yml"

  - task: upload-opsman
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfnorm/rootfs
      inputs:
        - name: pcf-pipelines
        - name: pivnet-opsmgr
      outputs:
        - name: opsman-metadata
      run:
        path: pcf-pipelines/install-pcf/azure/tasks/iaas/upload-opsman.sh

  - task: create-infrastructure
    file: pcf-lab-pipelines/install-pks/azure/tasks/create-infrastructure/task.yml
    params:
      AZURE_SUBSCRIPTION_ID: {{azure_subscription_id}}
      AZURE_TENANT_ID: {{azure_tenant_id}}
      AZURE_CLIENT_ID: {{azure_client_id}}
      AZURE_CLIENT_SECRET: {{azure_client_secret}}
      AZURE_REGION: {{azure_region}}